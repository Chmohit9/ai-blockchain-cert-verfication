/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  CertificateVerifier,
  CertificateVerifierInterface,
} from "../CertificateVerifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "HashStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "storeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
    ],
    name: "verifyHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061021f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806371dc61cb1461003b57806386fb281314610050575b600080fd5b61004e610049366004610167565b610077565b005b61006361005e366004610167565b610139565b604051901515815260200160405180910390f35b604081146100c15760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840d0c2e6d040d8cadccee8d606b1b604482015260640160405180910390fd5b6001600083836040516100d59291906101d9565b908152604051908190036020018120805492151560ff1990931692909217909155339061010590849084906101d9565b604051908190038120907f86fe26a4c2c4da61049e3786668239929ce2f0465c18b8c655ad4cd126df9ea990600090a35050565b600080838360405161014c9291906101d9565b9081526040519081900360200190205460ff16905092915050565b6000806020838503121561017a57600080fd5b823567ffffffffffffffff8082111561019257600080fd5b818501915085601f8301126101a657600080fd5b8135818111156101b557600080fd5b8660208285010111156101c757600080fd5b60209290920196919550909350505050565b818382376000910190815291905056fea2646970667358221220805a706298e8434e5b3ca75ac8fcca5af14daddfc45fb9d04e3e914b54dd9a0164736f6c63430008180033";

type CertificateVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateVerifier__factory extends ContractFactory {
  constructor(...args: CertificateVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CertificateVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CertificateVerifier__factory {
    return super.connect(runner) as CertificateVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateVerifierInterface {
    return new Interface(_abi) as CertificateVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CertificateVerifier {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CertificateVerifier;
  }
}
